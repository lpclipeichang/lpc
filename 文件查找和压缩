# 文件查找和压缩

## 文件查找
在文件系统上查找符合条件的文件

文件查找：locate, find

非实时查找(数据库查找)：locate 实时查找：find 

## 1.locate

查询系统上预建的文件索引数据库

/var/lib/mlocate/mlocate.db

依赖于事先构建的索引

索引的构建是在系统较为空闲时自动进行(周期性任务)，管理员手动更新数据库

(updatedb)

索引构建过程需要遍历整个根文件系统，极消耗资源

工作特点:

•	查找速度快

•	模糊查找

•	非实时查找

•	搜索的是文件的全路径，不仅仅是文件名

•	可能只搜索用户具备读取和执行权限的目录

## 2.locate命令
locate KEYWORD

有用的选项

-i	不区分大小写的搜索

-n  N	只列举前N个匹配项目

    [root@CentOS7 bin]#locate -n3 -i ".*.sh"

-r  使用正则表达式

    [root@CentOS7 bin]#locate -r "\.sh"
    /env.sh
    /boot/grub2/i386-pc/modinfo.sh
    /etc/X11/xinit/xinitrc.d/00-start-message-bus.sh
    /etc/X11/xinit/xinitrc.d/10-qt5-check-opengl2.sh
    /etc/X11/xinit/xinitrc.d/50-xinput.sh
    /etc/X11/xinit/xinitrc.d/localuser.sh
    /etc/X11/xinit/xinitrc.d/zz-liveinst.sh

--r 扩展正则表达式

示例搜索名称或路径中带有“conf”的文件 locate  conf

使用Regex来搜索以“.conf”结尾的文件 locate  -r  ‘\.conf$’

updatedb ：更新locate的数据库

## 3.find

实时查找工具，通过遍历指定路径完成文件查找

工作特点：

•	查找速度略慢

•	精确查找

•	实时查找

•	可能只搜索用户具备读取和执行权限的目录

语法：

find [OPTION]... [查找路径] [查找条件] [处理动作] 查找路径：指定具体目标路径；默认为当前目录

## 4.查找条件

查找条件：指定的查找标准，可以文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所有文件处理动作：对符合条件的文件做操作，默认输出至屏幕

指搜索层级

-maxdepth level 最大搜索目录深度,指定目录为第1级

    [root@CentOS7 ~]#find /data -maxdepth 1
    /data
    /data/bin
    /data/bak
    [root@CentOS7 ~]#find /data -maxdepth 2
    /data
    /data/bin
    /data/bin/f1.sh
    /data/bak
    [root@CentOS

-mindepth	level 最小搜索目录深度

    [root@CentOS7 ~]#find /data -mindepth 2
    /data/bin/f1.sh
    [root@CentOS7 ~]#find /data -mindepth 1
    /data/bin
    /data/bin/f1.sh
    /data/bak
    [root@CentOS7

先处理目录内的文件，再处理目录-depth

    [root@CentOS7 ~]#find /data -depth
    /data/bin/f1.sh
    /data/bin
    /data/bak
    /data


### 根据文件名和inode查找：

-name "文件名称"：支持使用glob

    [root@CentOS7 ~]#find /data -name  "*bin*"
    /data/bin


*, ?, [], [^]

-iname "文件名称"：不区分字母大小写

-inum n  按inode号查找

    [root@CentOS7 ~]#ll /data/bin/f1.sh -i
    68 -rw-r--r--. 1 root root 0 Oct 12 20:14 /data/bin/f1.sh
    [root@CentOS7 ~]#find /data -inum 68
    /data/bin/f1.sh

-samefile name  相同inode号的文件

-links n   链接数为n的文件

-regex “PATTERN”：以PATTERN匹配整个文件路径，而非文件名称

### 根据属主、属组查找：

-user USERNAME：查找属主为指定用户(UID)的文件

-group GRPNAME: 查找属组为指定组(GID)的文件

-uid UserID：查找属主为指定的UID号的文件

-gid GroupID：查找属组为指定的GID号的文件

-nouser：查找没有属主的文件

-nogroup：查找没有属组的文件


### 根据文件类型查找：

-type TYPE:

•	f: 普通文件

•	d: 目录文件

•	l: 符号链接文件

•	s：套接字文件

•	b: 块设备文件

•	c: 字符设备文件

•	p: 管道文件

### 空文件或目录

-empty find /app -type d  -empty

组合条件：与：-a 或：-o 非：-not, !
德·摩根定律：

(非 A) 或 (非 B) = 非(A 且 B) 

(非 A) 且 (非 B) = 非(A 或 B) 

示例：

!A -a !B = !(A -o B) !A -o !B = !(A -a B)

find示例

find -name snow.png

find -iname snow.png

find / -name  “*.txt”

find /var –name “*log*”

find -user joe -group joe

find -user joe -not -group joe

find -user joe -o -user jane

find -not \( -user joe -o -user jane \)

find / -user joe -o -uid 500

find示例

找出/tmp目录下，属主不是root，且文件名不以f开头的文件

 find /tmp \( -not -user root -a -not -name 'f*' \) -ls find /tmp -not \( -user root -o -name 'f*' \) –ls

排除目录

示例：

查找/etc/下，除/etc/sane.d目录的其它所有.conf后缀的文件

find /etc -path ‘/etc/sane.d’ -a –prune -o -name “*.conf” 

查找/etc/下，除/etc/sane.d和/etc/fonts两个目录的所有.conf后缀的文件

find /etc \( -path "/etc/sane.d" -o -path "/etc/fonts" \) -a -prune -o -
name "*.conf"
 
### 根据文件大小来查找：

-size [+|-]#UNIT

常用单位：k, M, G，c（byte）

    root@CentOS7 data]#find / -size 10M -ls
    find: ‘/proc/11579/task/11579/fd/5’: No such file or directory
    find: ‘/proc/11579/task/11579/fdinfo/5’: No such file or directory
    find: ‘/proc/11579/fd/6’: No such file or directory
    find: ‘/proc/11579/fdinfo/6’: No such file or directory
    8500 10001 -rw-rw-r--   1 root     root     10240992 Apr 25 18:58 /run/media/root/CentOS\ 7\ x86_64/Packages/evolution-3.22.6-14.el7.x86_64.rpm
    8505 9974 -rw-rw-r--   1 root     root     10212856 Apr 25 18:58 /run/media/root/CentOS\ 7\ x86_64/Packages/evolution-3.22.6-14.el7.i686.rpm


#UNIT: (#-1, #]

如：6k 表示(5k,6k]

-#UNIT：[0,#-1] 如：-6k 表示[0,5k]

+#UNIT：(#,∞) 如：+6k 表示(6k,∞) 根据时间戳：以“天”为单位

-atime [+|-]#,

#: [#,#+1)

+#: [#+1,∞]

-#: [0,#)

-mtime

-ctime

以“分钟”为单位

-amin

-mmin

-cmin

### 根据权限查找：

-perm [/|-]MODE

    [root@CentOS7 data]#find -perm 644
    ./bin/f1.sh


MODE: 精确权限匹配

/MODE：任何一类(u,g,o)对象的权限中只要能一位匹配即可，或关系，+ 从centos7开始淘汰

-MODE：每一类对象都必须同时拥有指定权限，与关系

    [root@CentOS7 data]#find -perm /222
    .
    ./bin
    ./bin/f1.sh
    ./bak
    [root@CentOS7 data]#find -perm -222


0 表示不关注

•	find -perm 755	会匹配权限模式恰好是755的文件

•	只要当任意人有写权限时，find -perm +222就会匹配

•	只有当每个人都有写权限时，find -perm -222才会匹配

•	只有当其它人（other）有写权限时，find -perm -002才会匹配
 
### 处理动作

-print：默认的处理动作，显示至屏幕

-ls：类似于对查找到的文件执行“ls -l”命令

    [root@CentOS7 data]#find -perm /222 -ls
        64    0 drwxr-xr-x   4 root     root           28 Oct 12 09:00 .
        67    0 drwxr-xr-x   2 root     root           19 Oct 12 20:14 ./bin
        68    0 -rw-r--r--   1 root     root            0 Oct 12 20:14 ./bin/f1.sh
    16777280    0 drwxr-xr-x   2 root     root            6 Oct 12 09:00 ./bak


-delete：删除查找到的文件

-fls file：查找到的所有文件的长格式信息保存至指定文件中

-ok COMMAND {} \; 对查找到的每个文件执行由COMMAND指定的命令，对于每个文件执行命令之前，都会交互式要求用户确认

    [root@CentOS7 data]#find -perm /222 -name "*.sh" -ok cp {} /data/bak \;
    < cp ... ./bin/f1.sh > ? y
    < cp ... ./bak/f1.sh > ? y
    cp: ‘./bak/f1.sh’ and ‘/data/bak/f1.sh’ are the same file

    [root@CentOS7 data]#cd bak
    [root@CentOS7 bak]#ls
    f1.sh

-exec COMMAND {} \; 对查找到的每个文件执行由COMMAND指定的命令（可以批量复制和删除）

    find -perm /222 -name "*.sh" -exec cp {} /data/bak \;

{}: 用于引用查找到的文件名称自身

find传递查找到的文件至后面指定的命令时，查找到所有符合条件的文件一次性传递给后面的命
令

### 参数替换xargs

由于很多命令不支持管道|来传递参数，而日常工作中有这个必要，所以就有了 xargs命令

xargs用于产生某个命令的参数，xargs 可以读入 stdin 的数据，并且以空格符或回车符将 stdin 的数据分隔成为arguments 

注意：文件名或者是其他意义的名词内含有空格符的情况

有些命令不能接受过多参数，命令执行可能会失败，xargs可以解决

示例：’

	ls f* |xargs	rm
    
find /sbin -perm +700 |ls -l 

 这个命令是错误的 find /sbin -perm +7000 | xargs ls –l 

 [root@CentOS7 ~]#find /sbin -perm /7000 |xargs ls -l
total 16

    -rw-------. 1 root root 1894 Sep 18 22:55 anaconda-ks.cfg
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Desktop
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Documents
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Downloads
    -rw-r--r--. 1 root root   49 Sep 27 17:42 env.sh
    -rw-r--r--. 1 root root 1928 Sep 18 23:59 initial-setup-ks.cfg
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Music
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Pictures
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Public
    -rw-r--r--. 1 root root   51 Sep 27 17:35 root
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Templates
    drwxr-xr-x. 2 root root    6 Sep 18 23:59 Videos
    

查找特殊权限的文件

find和xargs格式：find | xargs COMMAND

### find示例

备份配置文件，添加.orig这个扩展名

find  -name  “*.conf”  -exec  cp {}  {}.orig \;

提示删除存在时间超过３天以上的joe的临时文件 

find /tmp -ctime +3 -user joe -ok rm {} \;

在主目录中寻找可被其它用户写入的文件

find ~ -perm -002 -exec chmod o-w {} \;

查找/data下的权限为644，后缀为sh的普通文件，增加执行权限

find /data –type  f -perm 644  -name “*.sh” –exec chmod 755 {} \;

查看/home的目录

find  /home –type d -ls

# Gnome	搜索工具
位置->搜索文件……

图形化搜索工具，可搜索

•	命令

•	内容

•	用户/组群

•	大小

•	修改时间

压缩、解压缩及归档工具

file-roller

compress/uncompress: .Z

gzip/gunzip: .gz

bzip2/bunzip2: .bz2

xz/unxz: .xz

zip/unzip

tar

cpio

compress/uncompress

## 1.compress [-dfvcVr] [-b maxbits] [file ...]

-d: 解压缩，相当于uncompress

-c: 结果输出至标准输出,不删除原文件

-v: 显示详情

uncompress 解压缩

zcat file.Z >file

## 2.gzip/gunzip

gzip [OPTION]... FILE ...

-d：解压缩，相当于gunzip

-c：结果输出至标准输出，保留原文件不改变

-#：1-9，指定压缩比，值越大压缩比越大

zcat：不显式解压缩的前提下查看文本文件内容

示例：

gzip -c messages  >messages.gz gzip -c -d messages.gz > messages zcat messages.gz > messages cat messages | gzip > m.gz

## 3.bzip2/bunzip2/bzcat

bzip2 [OPTION]... FILE ...

-k：keep, 保留原文件

-d：解压缩

-#：1-9，压缩比，默认为9

bzcat：不显式解压缩的前提下查看文本文件内容 

## 4.xz/unxz/xzcat

xz [OPTION]... FILE ...

-k: keep, 保留原文件

-d：解压缩

-#：1-9，压缩比，默认为6

## 5.unxz file.xz 解压缩
xzcat: 不显式解压缩的前提下查看文本文件内容

zip/unzip

打包压缩

zip –r /backup/sysconfig /etc/sysconfig/

    [root@CentOS7 data]#ll passwd
    -rw-r--r--. 1 root root 2189 Oct 13 15:05 passwd
    [root@CentOS7 data]#xz -k passwd
    [root@CentOS7 data]#ls
    bak  bin  passwd  passwd.xz
    [root@CentOS7 data]#ll passwd.xz
    -rw-r--r--. 1 root root 940 Oct 13 15:05 passwd.xz


## 6.解包解压缩

unzip sysconfig.zip

cat /var/log/messages | zip messages  unzip -p message > message

## 7.tat工具

tar（Tape ARchive，磁带归档的缩写）

tar [OPTION]... 

(1)	创建归档 tar -cpvf /PATH/FILE.tar FILE...

    [root@CentOS7 data]#tar cfv passwd.tar passwd
    passwd
    [root@CentOS7 data]#ls
    bak  bin  passwd  passwd.tar  v
    [root@CentOS7 data]#ll passwd.tar
    -rw-r--r--. 1 root root 10240 Oct 13 15:11 passwd.tar


(2)	追加文件至归档： 注：不支持对压缩文件追加 tar -r -f /PATH/FILE.tar FILE...

    [root@CentOS7 data]#tar -rf passwd.tar bin/g

(3)	查看归档文件中的文件列表 tar -t -f /PATH/FILE.tar

(4)	展开归档

tar -x -f /PATH/FILE.tar tar -x -f /PATH/FILE.tar -C /PATH/

    [root@CentOS7 data]#tar xvf passwd.tar -C bak
    passwd
    bin/f1.sh
    bin/g
    [root@CentOS7 data]#cd bak
    [root@CentOS7 bak]#ls
    bin  f1.sh  passwd


(5)	结合压缩工具实现：归档并压缩

-j: bzip2, -z: gzip, -J: xz

-exclude 排除文件

    tar zcvf /root/a3.tgz --exclude=/app/host1 --exclude=/app/host2 /app

-T选项指定输入文件,-X选项指定包含要排除的文件列表

    tar zcvf mybackup.tgz -T /root/includefilelist -X /root/excludefilelist

## splist:：分割一个文件为多个文件分割大的 tar 文件为多份小文件

split –b  Size –d tar-file-name  prefix-name split -b 1M –d mybackup.tgz mybackup-parts
	split	-b 1M mybackup.tgz mybackup-parts

合并：

cat mybackup-parts* > mybackup.tar.gz

## 8.cpio

功能：复制文件从或到归档

cpio命令是通过重定向的方式将文件进行打包备份，还原恢复的工具，它可以解压以

“.cpio”或者“.tar”结尾的文件

cpio [选项] > 文件名或者设备名

cpio [选项] < 文件名或者设备名

选项

	-o 	将文件拷贝打包成文件或者将文件输出到设备上
	-O filename	输出到指定的归档文件名
	-A	向已存在的归档文件中追加文件
	-i	解包，将打包文件解压或将设备上的备份还原到系统
	-I filename	对指定的归档文件名解压
	-t	预览，查看文件内容或者输出到设备上的文件内容
	-F filename	使用指定的文件名替代标准输入或输出
	-d 	解包生成目录，在cpio还原时，自动的建立目录
	-v 	显示打包过程中的文件名称
